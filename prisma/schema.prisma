generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SELLER
  CUSTOMER
}

model User {
  id               Int               @id @default(autoincrement())
  firstName        String            @map("first_name")
  lastName         String            @map("last_name")
  email            String            @unique
  password         String
  role             Role              @default(CUSTOMER)
  isActive         Boolean?          @default(false) @map("is_active")
  isConfirmed      Boolean?          @default(false) @map("is_confirmed")
  isDeleted        Boolean?          @default(false) @map("is_deleted")
  createdAt        DateTime?         @default(now()) @map("created_at")
  updatedAt        DateTime?         @updatedAt @map("updated_at")
  ConfirmationOtp  ConfirmationOtp?
  ResetPasswordOtp ResetPasswordOtp?
  Store            Store?

  @@map("users")
}

model ConfirmationOtp {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique @map("user_id")
  otpCode    Int      @map("otp_code")
  expiryDate DateTime @map("expiry_date")
  user       User     @relation(fields: [userId], references: [id])

  @@map("confirmation_otps")
}

model ResetPasswordOtp {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique @map("user_id")
  otpCode    Int      @map("otp_code")
  expiryDate DateTime @map("expiry_date")
  user       User     @relation(fields: [userId], references: [id])

  @@map("reset_password_otps")
}

model Store {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique @map("user_id")
  name      String    @unique
  address   String    @unique
  logo      String
  banner    String?
  cityId    Int       @map("city_id")
  countryId Int       @map("country_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  city      City      @relation(fields: [cityId], references: [id])
  country   Country   @relation(fields: [countryId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  Product   Product[]

  @@map("stores")
}

model Color {
  id                     Int                      @id @default(autoincrement())
  name                   String
  value                  String
  createdAt              DateTime                 @default(now()) @map("created_at")
  updatedAt              DateTime                 @updatedAt @map("updated_at")
  ColorsOnSizesOnProduct ColorsOnSizesOnProduct[]

  @@map("colors")
}

model Size {
  id                     Int                      @id @default(autoincrement())
  name                   String
  createdAt              DateTime                 @default(now()) @map("created_at")
  updatedAt              DateTime                 @updatedAt @map("updated_at")
  ColorsOnSizesOnProduct ColorsOnSizesOnProduct[]

  @@map("sizes")
}

model Product {
  id                     Int                      @id @default(autoincrement())
  name                   String
  description            String
  price                  Decimal                  @db.Decimal(8, 2)
  discount               Decimal?                 @default(0) @db.Decimal(5, 2)
  storeId                Int                      @map("store_id")
  ProductImage           ProductImage[]
  createdAt              DateTime                 @default(now()) @map("created_at")
  updatedAt              DateTime                 @updatedAt @map("updated_at")
  store                  Store                    @relation(fields: [storeId], references: [id])
  ColorsOnSizesOnProduct ColorsOnSizesOnProduct[]

  @@map("products")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  productId Int      @map("product_id")
  image     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  product   Product  @relation(fields: [productId], references: [id])

  @@map("product_images")
}

model ColorsOnSizesOnProduct {
  id            Int      @id @default(autoincrement())
  productId     Int      @map("product_id")
  colorId       Int      @map("color_id")
  sizeId        Int      @map("size_id")
  stockQuantity Int?     @default(1) @map("stock_quantity")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  product       Product  @relation(fields: [productId], references: [id])
  color         Color    @relation(fields: [colorId], references: [id])
  size          Size     @relation(fields: [sizeId], references: [id])

  @@map("colors_on_sizes_on_products")
}

model Country {
  id          Int      @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  countryCode String   @unique @map("country_code")
  City        City[]
  Store       Store[]

  @@map("countries")
}

model City {
  id        Int      @id @default(autoincrement())
  name      String
  countryId Int      @map("country_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  country   Country  @relation(fields: [countryId], references: [id])
  Store     Store[]

  @@map("cities")
}
